name: Deploy to VPS

# Срабатывает после успешного завершения сборки и публикации образа
on:
  workflow_run:
    workflows:
      - Build and Push Docker Image
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-vps
      cancel-in-progress: true

    steps:
      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host:     ${{ secrets.VPS_HOST }}
          port:     ${{ secrets.VPS_PORT }}
          username: ${{ vars.VPS_USER }}
          key:      ${{ secrets.VPS_SSH_KEY }}
          envs: |
            DOCKER_USERNAME=${{ vars.DOCKER_USERNAME }}
            DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}
            script: |
            set -euo pipefail

            # Переходим в директорию проекта (создадим, если нет)
            if [ ! -d /home/deploy/tg_user_bot ]; then
            git clone git@github.com:larriantoniy/tg_user_bot.git /home/deploy/tg_user_bot
            fi
            cd /home/deploy/tg_user_bot

            # Обновляем код
            git pull

            # Логинимся в Docker Hub
            echo "$DOCKER_PASSWORD" | docker login \
            --username "$DOCKER_USERNAME" \
            --password-stdin

            # Тянем свежие образы
            docker compose pull

            # Останавливаем и удаляем старые контейнеры
            docker compose down

            # Запускаем сервисы заново (без билда)
            docker compose up -d --no-build

            # Инициализируем RediSearch
            docker compose exec redis bash -c '
            until redis-cli ping | grep -q PONG; do
            echo "Ждём Redis..."
            sleep 2
            done
            bash /scripts/init_redis_search.sh
            '
