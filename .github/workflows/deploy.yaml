name: Deploy to VPS

# Срабатывает после успешного завершения сборки и публикации образа
on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types: [completed]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Деплой на сервер через SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host:             ${{ secrets.VPS_HOST }}
          port:             ${{ secrets.VPS_PORT }}
          username:         ${{ vars.VPS_USER }}
          key:              ${{ secrets.VPS_SSH_KEY }}
          docker_password:  ${{ secrets.DOCKER_PASSWORD }}
          docker_username:  ${{ vars.DOCKER_USERNAME }}
          telegram_api_id:  ${{ vars.DOCKER_USERNAME }}
          script: |
            set -e
            
            cd /home/deploy/tg_user_bot || exit 1   # Переходим в директорию проекта
            
            # если папки нет — клонируем
            if [ ! -d ~/tg_user_bot ]; then
            git clone git@github.com:larriantoniy/tg_user_bot.git ~/tg_user_bot
            fi  
            git pull

            # Выкачиваем свежий образ из реестра
            docker compose pull

            # Останавливаем и удаляем старые контейнеры
            docker compose down

            # Запускаем новые контейнеры в фоне
            docker compose up -d --no-build

            # Инициализируем RediSearch (ждём, пока Redis станет готов)
            docker compose exec redis bash -c \
              'until redis-cli ping | grep -q PONG; do echo "Ждём Redis..."; sleep 2; done; \
               bash /scripts/init_redis_search.sh'