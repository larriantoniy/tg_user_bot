
services:
  bot:
    image: ${DOCKER_USERNAME}/tg_user_bot:main
    container_name: tg-user-bot
    restart: unless-stopped
    ports:
      - "7230:7230"
    env_file:
      - .env
      #  переменные окружения при необходимости (см. ниже)
    depends_on:
      - redis
    # Для первой авторизации Telegram юзер-бота:
    stdin_open: true   # открыть STDIN
    tty: true          # выделить TTY для взаимодействия
    volumes:
      - tdlib_db_data:/tdlib-db
      - tdlib_files_data:/tdlib-files
  redis:
    image: redis/redis-stack-server:latest  # Redis Stack (включает RediSearch)
    container_name: redis
    restart: unless-stopped
    entrypoint: >
      bash -c '
        # 1) Запускаем Redis в фоне через официальный entrypoint
        /usr/local/bin/docker-entrypoint.sh redis-stack-server & 
        # 2) Ждём, пока сервер не ответит на PING
        until redis-cli ping; do 
          echo "Waiting for Redis…"; 
          sleep 1; 
        done
        # 3) Делаем скрипт исполняемым и инициализируем индекс
        chmod +x /scripts/init_redis_search.sh && /scripts/init_redis_search.sh
        # 4) Ждём фонового процесса Redis, чтобы контейнер не упал
        wait
      '
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./scripts:/scripts

volumes:
  redis_data:
  tdlib_db_data:
  tdlib_files_data: